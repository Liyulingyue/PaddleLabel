name: Publish PaddleLabel to pypi

permissions:
  contents: read
  pages: write
  id-token: write

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
        node-version: ["19.x"]

    steps:
      - name: Check out frontend project
        uses: actions/checkout@v3
        with:
          repository: PaddleCV-SIG/PaddleLabel-Frontend
          ref: develop

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      
      - run: |
          pwd
          ls

      - name: Cache node_modules
        id: node-modules-cache # use this to check for `cache-hit` (`steps.node-modules-cache.outputs.cache-hit != 'true'`)
        uses: actions/cache@v3
        env:
          cache-name: cache-node_modules
        with:
          path: ./node_modules/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install yarn
        run: |
          npm i --global yarn
          echo "$GITHUB_WORKSPACE/node_modules/.bin" >> $GITHUB_PATH- uses: actions/checkout@v3

      - name: Install node_modules
        if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: |
          yarn
          ls ./node_modules/

      - name: Build frontend
        run: |
          npm run build

      - name: Move built frontend
        run: |
          mv dist/ ..

      - name: Write frontend commit hash to package
        run: |
          echo frontend $(git rev-parse --short HEAD) >> ../git_versions.html

      - name: Checkout backend code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine wheel
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # - name: Bump version
      #   run: |
      #     python tool/bumpversion.py
      #     git config --global user.email "bot@github.com" && git config --global user.name "Action Bot"
      #     git add paddlelabel/version; git commit -m "bump version"; git push

      - name: Write backend commit hash to package
        run: |
          echo backend $(git rev-parse --short HEAD) >> ../git_versions.html

      - name: Copy built frontend and commit hash
        run: |
          mv ../dist/ ./paddlelabel/static/
          mv ../git_versions.html ./paddlelabel/static/

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 1 # Increment this number if you need to re-download cached gems
          working-directory: doc/

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2

      - name: Jekyll build
        run: |
          cd doc/
          python prepare.py # insert headers, change md relative link path to html ... 
          bundle exec jekyll build \
            --destination ../paddlelabel/static/doc/ \
            --baseurl "/static/doc"

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Save built package
        uses: actions/upload-artifact@v3
        with:
          name: PaddleLabel_built_package
          path: |
            dist

      # - name: Publish to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     user: __token__
      #     password: ${{ secrets.PADDLELABEL_PUBLISH_API_TOKEN }}
